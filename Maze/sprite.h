#pragma once
#ifndef SPRITE_H
#define SPRITE_H

#include "defs.h"

const int BIRD_CLIPS[][4] = {
	{0, 0, 182, 168},
	{181, 0, 182, 168},
	{364, 0, 182, 168},
	{547, 0, 182, 168},
	{728, 0, 182, 168},

	{0, 170, 182, 168},
	{181, 170, 182, 168},
	{364, 170, 182, 168},
	{547, 170, 182, 168},
	{728, 170, 182, 168},

	{0, 340, 182, 168},
	{181, 340, 182, 168},
	{364, 340, 182, 168},
	{547, 340, 182, 168},
};
const int BIRD_FRAMES = sizeof(BIRD_CLIPS) / sizeof(int) / 4;

const int SAMURAI[][4] = {
	{ 0, 0, 100, 100 },
	{ 100, 0, 100, 100 },
	{ 200, 0, 100, 100 },
	{ 300, 0, 100, 100 },
	{ 400, 0, 100, 100 },
	{ 500, 0, 100, 100 },
	{ 600, 0, 100, 100 },
	{ 700, 0, 100, 100 },
	{ 800, 0, 100, 100 },
	{ 900, 0, 100, 100 },
	{ 1000, 0, 100, 100 },
	{ 1100, 0, 100, 100 },
	{ 1200, 0, 100, 100 },
	{ 1300, 0, 100, 100 },
	{ 1400, 0, 100, 100 },//15 slash

	{ 0, 100, 100, 100 },
	{ 100, 100, 100, 100 },
	{ 200, 100, 100, 100 },
	{ 300, 100, 100, 100 },
	{ 400, 100, 100, 100 },
	{ 500, 100, 100, 100 },
	{ 600, 100, 100, 100 },
	{ 700, 100, 100, 100 },
	{ 800, 100, 100, 100 },
	{ 900, 100, 100, 100 },
	{ 1000, 100, 100, 100 },
	{ 1100, 100, 100, 100 },
	{ 1200, 100, 100, 100 },
	{ 1300, 100, 100, 100 },//14 jump

	{ 0, 200, 100, 100 },
	{ 100, 200, 100, 100 },
	{ 200, 200, 100, 100 },
	{ 300, 200, 100, 100 },
	{ 400, 200, 100, 100 },
	{ 500, 200, 100, 100 },
	{ 600, 200, 100, 100 },
	{ 700, 200, 100, 100 },
	{ 800, 200, 100, 100 },
	{ 900, 200, 100, 100 },//10 walk

	{ 0, 300, 100, 100 },
	{ 100, 300, 100, 100 },
	{ 200, 300, 100, 100 },
	{ 300, 300, 100, 100 },//4 dead

	{ 0, 400, 100, 100 },
	{ 100, 400, 100, 100 },
	{ 200, 400, 100, 100 },//3 defend
};
const int SAMURAI_FRAMES = sizeof(SAMURAI) / sizeof(int) / 4;


struct Sprite {
    SDL_Texture* texture;
    std::vector<SDL_Rect> clips;
    int currentFrame = 0;

    void init(SDL_Texture* _texture, int frames, const int _clips[][4]);
    void tick();

    const SDL_Rect* getCurrentClip() const;
};


#endif // !SPRITE_H

